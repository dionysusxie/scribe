#!/usr/bin/python

##  Copyright (c) 2007-2008 Facebook
##
##  Licensed under the Apache License, Version 2.0 (the "License");
##  you may not use this file except in compliance with the License.
##  You may obtain a copy of the License at
##
##      http://www.apache.org/licenses/LICENSE-2.0
##
##  Unless required by applicable law or agreed to in writing, software
##  distributed under the License is distributed on an "AS IS" BASIS,
##  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##  See the License for the specific language governing permissions and
##  limitations under the License.
##
## See accompanying file LICENSE or visit the Scribe site at:
## http://developers.facebook.com/scribe/


'''scribe_cat: A simple script for sending messages to scribe.'''

import sys
import time
from scribe import scribe
from thrift.transport import TTransport, TSocket
from thrift.protocol import TBinaryProtocol

# default value:
def_host = '127.0.0.1'
def_port = 1463    
def_interval = 1.0
def_log_num_each_time = 1
def_repeate_time = 1

# actual value:
host = def_host
port = def_port
interval = def_interval
log_num_each_time = def_log_num_each_time
repeate_time = def_repeate_time


index = 1
while index < len(sys.argv):
    if sys.argv[index] == '-p':
        host_port = sys.argv[index+1].split(':')
        host = host_port[0]
        if len(host_port) > 1:
            port = int(host_port[1])
        index += 1
    elif sys.argv[index] == '-i':
        interval = float(sys.argv[index+1])
        index += 1
    elif sys.argv[index] == '-n':
        log_num_each_time = int(sys.argv[index+1])
        index += 1
    elif sys.argv[index] == '-r':
        repeate_time = int(sys.argv[index+1])
        index += 1
    else:
        print 'usage  : scribe_cat_r [-h] [-p host[:port]] [-i interval] [-n log_num_each_time] [-r repeate_time]'
        sys.exit('default: {0}:{1} -i {2} -n {3} -r {4}'.format(def_host, 
                                                                def_port, 
                                                                def_interval, 
                                                                def_log_num_each_time, 
                                                                def_repeate_time))

    index += 1
## end while
    
    
the_message  = str(log_num_each_time)
the_category = 'scribekeeper'
log_entry = scribe.LogEntry(category=the_category, message=the_message)

socket = TSocket.TSocket(host=host, port=port)
transport = TTransport.TFramedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(trans=transport, strictRead=False, strictWrite=False)
client = scribe.Client(iprot=protocol, oprot=protocol)


sended_time = 0
bContinue = True

while bContinue:
    print "{0}: sending {1} messages now".format(sended_time+1, log_num_each_time)
    
    transport.open()
    result = client.Log(messages=[log_entry])
    transport.close()

    if scribe.ResultCode.OK == result:
        print "OK"
        sended_time += 1
        time.sleep(interval)
    elif scribe.ResultCode.TRY_LATER == result:
        print >> sys.stderr, "TRY_LATER"
        time.sleep(interval * 3)    # sleep for more times if the scribe is busy.
    else:
        sys.exit("Unknown error code.")

    if repeate_time != 0:   # 0 means infinity
        if sended_time >= repeate_time:
            bContinue = False
## end while

print "sending over!"
